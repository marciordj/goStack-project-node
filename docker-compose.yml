version: '3'

services:
  # app:
  #   container_name: go-barber
  #   build:
  #     context: .
  #     dockerfile: docker/Dockerfile
  #   ports:
  #     - 3333:3333
  #   volumes:
  #     - .:/usr/app
  #   links:
  #     - postgres
  #   networks:
  #     - gb_env

  postgres:
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: docker
      POSTGRES_USER: postgres
    ports:
      - '5432:5432'
    volumes:
      - ./pgdata:/var/lib/postgresql/data

# networks:
#   gb_env:














# version: '3.8'

# services:
#   database:
#     image: 'postgres'
#     env_file:
#       - database.env
#     ports:
#       - 5434:5432
#     volumes:
#       - /home/marciordj/projects/goStack:/var/lib/postgres/data






# version = versão da estrutura do yml que vc vai usar
# services = nesta sessão vc vai listar os serviços que o docker-compose vai "orquestrar"
# web = neste caso, é o nome do serviço vc poderia chamar de goBarber ou qualquer outro nome, é o seu identificador
# build = qual docker será "buildado" ao subir... no exemplo, está indicando como . (ponto) pois o arquivo Dockerfile estaria na mesma pasta que o docker-compose.yml
# volumes = são as unidades de disco que serão criadas para a imagem, caso tenha necessidade de persistir dados
# links = indica que vai ter comunidação com outro serviço, no caso um redis
# enviroment = coloca as variaveis de desenvolvimento, como senha POSTGRES_PASSWORD por exemplo
